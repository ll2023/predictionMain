df = tsla.history(interval='30min',start='2023-01-03',end='2023-01-04')
df = tsla.history(interval='30m',start='2023-01-03',end='2023-01-04')
df = tsla.history(interval='1h',start='2023-01-03',end='2023-01-04')
df
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import h2o
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import torch
torch.cuda.is_available()
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
numpy.array([1,1,1]) == numpy.array([1,1,1])
import numpy
numpy.array([1,1,1]) == numpy.array([1,1,1])
numpy.array([1,1,1]) == numpy.array([1,0,1])
[int(x) for x in numpy.array([1,1,1])==numpy.array([1,0,1])]
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import pytorch_lightning as pl
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import optuna
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import h2o
h2o.init()
exit()
import statsmodels.api as sm
x = [22, 24, 25, 25, 28, 29, 34, 37, 40, 44, 51, 48, 47, 50, 51]
sm.tsa.acf(x)
sm.tsa.acf(x,nlags=2)
sm.tsa.acf(x,nlags=1)
sm.tsa.acf(x,nlags=1)[0]
sm.tsa.acf(x,nlags=1)[1]
x = [22, 24, 25, 25, 28, 29, 34, 37, 40, 44, 51, 48, 47, 50,51]
x=x.reverse()
x
len(x)
x = [22, 24, 25, 25, 28, 29, 34, 37, 40, 44, 51, 48, 47, 50, 51]
x.reverse()
x = [22, 24, 25, 25, 28, 29, 34, 37, 40, 44, 51, 48, 47, 50, 51]
x=x[::-1
]
x
sm.tsa.acf(x,nlags=1)
from statsmodels.stats.stattools import durbin_watson
durbin_watson(x)
x=x[::-1]
durbin_watson(x)
x
sm.tsa.acf(x,nlags=2)
sm.tsa.acf(x,nlags=2)[1]
exit()
import h2o
h2o.init()
exit()
